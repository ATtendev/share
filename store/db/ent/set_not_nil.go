// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/ATtendev/share/store/db/ent/schema"
	"github.com/google/uuid"
)

// set field if value's pointer is not nil.
func (s *SessionUpdate) SetNotNilUpdatedAt(value *time.Time) *SessionUpdate {
	if value != nil {
		return s.SetUpdatedAt(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SessionUpdateOne) SetNotNilUpdatedAt(value *time.Time) *SessionUpdateOne {
	if value != nil {
		return s.SetUpdatedAt(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SessionCreate) SetNotNilUpdatedAt(value *time.Time) *SessionCreate {
	if value != nil {
		return s.SetUpdatedAt(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SessionUpdate) SetNotNilDeleteAt(value *time.Time) *SessionUpdate {
	if value != nil {
		return s.SetDeleteAt(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SessionUpdateOne) SetNotNilDeleteAt(value *time.Time) *SessionUpdateOne {
	if value != nil {
		return s.SetDeleteAt(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SessionCreate) SetNotNilDeleteAt(value *time.Time) *SessionCreate {
	if value != nil {
		return s.SetDeleteAt(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SessionUpdate) SetNotNilUserID(value *uuid.UUID) *SessionUpdate {
	if value != nil {
		return s.SetUserID(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SessionUpdateOne) SetNotNilUserID(value *uuid.UUID) *SessionUpdateOne {
	if value != nil {
		return s.SetUserID(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SessionCreate) SetNotNilUserID(value *uuid.UUID) *SessionCreate {
	if value != nil {
		return s.SetUserID(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SessionUpdate) SetNotNilDescription(value *string) *SessionUpdate {
	if value != nil {
		return s.SetDescription(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SessionUpdateOne) SetNotNilDescription(value *string) *SessionUpdateOne {
	if value != nil {
		return s.SetDescription(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SessionCreate) SetNotNilDescription(value *string) *SessionCreate {
	if value != nil {
		return s.SetDescription(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SessionUpdate) SetNotNilTitle(value *string) *SessionUpdate {
	if value != nil {
		return s.SetTitle(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SessionUpdateOne) SetNotNilTitle(value *string) *SessionUpdateOne {
	if value != nil {
		return s.SetTitle(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SessionCreate) SetNotNilTitle(value *string) *SessionCreate {
	if value != nil {
		return s.SetTitle(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SessionUpdate) SetNotNilPosition(value *[]schema.Point) *SessionUpdate {
	if value != nil {
		return s.SetPosition(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SessionUpdateOne) SetNotNilPosition(value *[]schema.Point) *SessionUpdateOne {
	if value != nil {
		return s.SetPosition(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SessionCreate) SetNotNilPosition(value *[]schema.Point) *SessionCreate {
	if value != nil {
		return s.SetPosition(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SessionUpdate) SetNotNilIsFinished(value *bool) *SessionUpdate {
	if value != nil {
		return s.SetIsFinished(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SessionUpdateOne) SetNotNilIsFinished(value *bool) *SessionUpdateOne {
	if value != nil {
		return s.SetIsFinished(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (s *SessionCreate) SetNotNilIsFinished(value *bool) *SessionCreate {
	if value != nil {
		return s.SetIsFinished(*value)
	}
	return s
}

// set field if value's pointer is not nil.
func (t *TokenUpdate) SetNotNilUpdatedAt(value *time.Time) *TokenUpdate {
	if value != nil {
		return t.SetUpdatedAt(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TokenUpdateOne) SetNotNilUpdatedAt(value *time.Time) *TokenUpdateOne {
	if value != nil {
		return t.SetUpdatedAt(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TokenCreate) SetNotNilUpdatedAt(value *time.Time) *TokenCreate {
	if value != nil {
		return t.SetUpdatedAt(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TokenUpdate) SetNotNilDeleteAt(value *time.Time) *TokenUpdate {
	if value != nil {
		return t.SetDeleteAt(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TokenUpdateOne) SetNotNilDeleteAt(value *time.Time) *TokenUpdateOne {
	if value != nil {
		return t.SetDeleteAt(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TokenCreate) SetNotNilDeleteAt(value *time.Time) *TokenCreate {
	if value != nil {
		return t.SetDeleteAt(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TokenUpdate) SetNotNilUserID(value *uuid.UUID) *TokenUpdate {
	if value != nil {
		return t.SetUserID(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TokenUpdateOne) SetNotNilUserID(value *uuid.UUID) *TokenUpdateOne {
	if value != nil {
		return t.SetUserID(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TokenCreate) SetNotNilUserID(value *uuid.UUID) *TokenCreate {
	if value != nil {
		return t.SetUserID(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TokenUpdate) SetNotNilToken(value *string) *TokenUpdate {
	if value != nil {
		return t.SetToken(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TokenUpdateOne) SetNotNilToken(value *string) *TokenUpdateOne {
	if value != nil {
		return t.SetToken(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (t *TokenCreate) SetNotNilToken(value *string) *TokenCreate {
	if value != nil {
		return t.SetToken(*value)
	}
	return t
}

// set field if value's pointer is not nil.
func (u *UserUpdate) SetNotNilUpdatedAt(value *time.Time) *UserUpdate {
	if value != nil {
		return u.SetUpdatedAt(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserUpdateOne) SetNotNilUpdatedAt(value *time.Time) *UserUpdateOne {
	if value != nil {
		return u.SetUpdatedAt(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserCreate) SetNotNilUpdatedAt(value *time.Time) *UserCreate {
	if value != nil {
		return u.SetUpdatedAt(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserUpdate) SetNotNilDeleteAt(value *time.Time) *UserUpdate {
	if value != nil {
		return u.SetDeleteAt(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserUpdateOne) SetNotNilDeleteAt(value *time.Time) *UserUpdateOne {
	if value != nil {
		return u.SetDeleteAt(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserCreate) SetNotNilDeleteAt(value *time.Time) *UserCreate {
	if value != nil {
		return u.SetDeleteAt(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserUpdate) SetNotNilUserName(value *string) *UserUpdate {
	if value != nil {
		return u.SetUserName(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserUpdateOne) SetNotNilUserName(value *string) *UserUpdateOne {
	if value != nil {
		return u.SetUserName(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserCreate) SetNotNilUserName(value *string) *UserCreate {
	if value != nil {
		return u.SetUserName(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserUpdate) SetNotNilEmail(value *string) *UserUpdate {
	if value != nil {
		return u.SetEmail(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserUpdateOne) SetNotNilEmail(value *string) *UserUpdateOne {
	if value != nil {
		return u.SetEmail(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserCreate) SetNotNilEmail(value *string) *UserCreate {
	if value != nil {
		return u.SetEmail(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserUpdate) SetNotNilAvatarURL(value *string) *UserUpdate {
	if value != nil {
		return u.SetAvatarURL(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserUpdateOne) SetNotNilAvatarURL(value *string) *UserUpdateOne {
	if value != nil {
		return u.SetAvatarURL(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserCreate) SetNotNilAvatarURL(value *string) *UserCreate {
	if value != nil {
		return u.SetAvatarURL(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserUpdate) SetNotNilPasswordHash(value *string) *UserUpdate {
	if value != nil {
		return u.SetPasswordHash(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserUpdateOne) SetNotNilPasswordHash(value *string) *UserUpdateOne {
	if value != nil {
		return u.SetPasswordHash(*value)
	}
	return u
}

// set field if value's pointer is not nil.
func (u *UserCreate) SetNotNilPasswordHash(value *string) *UserCreate {
	if value != nil {
		return u.SetPasswordHash(*value)
	}
	return u
}
